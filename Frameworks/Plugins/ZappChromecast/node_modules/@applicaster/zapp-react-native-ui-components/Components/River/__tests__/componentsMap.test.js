import React from "react";
import { View } from "react-native";
import TestRenderer from "react-test-renderer";
import { Provider } from "react-redux";
import configureStore from "redux-mock-store";

import { ComponentsMapComponent } from "../ComponentsMap";
import * as themeUtils from "@applicaster/zapp-react-native-utils/theme";

const theme = require("./theme-mock.json");

const mockStore = configureStore();

const components = {
  Hero: jest.fn(() => <View />),
  Grid: jest.fn(() => <View />),
};

const cellStyles = {
  "uuid-1234-A": {},
  "uuid-5678-B": {},
};

const riverComponents = [
  {
    id: "A1",
    component_type: "hero",
    styles: {
      cell_styles: ["some", "obsolete", "ids"],
    },
  },
  {
    id: "A2",
    component_type: "grid",
    styles: {
      master_cell_id: "uuid-5678-B",
    },
  },
];

const plugins = {};
const navigation = {};

const props = { components, cellStyles, riverComponents, navigation };
const store = mockStore({ components, cellStyles, plugins });

it("renders renders components map correctly", () => {
  jest.mock("@applicaster/zapp-react-native-utils/theme");
  afterEach(() => {
    spy.mockClear();
  });
  const spy = jest
    .spyOn(themeUtils, "useTheme")
    .mockImplementation(() => () => theme);
  const wrapper = TestRenderer.create(
    <Provider store={store}>
      <ComponentsMapComponent {...props} />
    </Provider>
  );
  expect(wrapper.toJSON()).toMatchSnapshot();
});
