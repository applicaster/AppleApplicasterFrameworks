// @flow
import * as React from "react";
type Props = {
  screenData: {
    callback: ({}) => void,
    payload: {},
    hookPlugin: {
      module: {
        Component: React.ComponentType<any>,
        presentFullScreen: boolean,
      },
      configuration: {},
    },
  },
  navigator: { hideNavBar: () => void, showNavBar: () => void },
};

export const HookRenderer = ({ screenData, navigator }: Props): React.Node => {
  const {
    callback,
    payload,
    hookPlugin: {
      module: { Component: HookComponent, presentFullScreen },
      configuration,
    },
  } = screenData;

  React.useEffect(() => {
    if (presentFullScreen) {
      navigator.hideNavBar();
    }
    return () => {
      navigator.showNavBar();
    };
  }, []);

  return <HookComponent {...{ callback, payload, configuration }} />;
};
