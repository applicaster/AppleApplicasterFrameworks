const BACKGROUND_COLOR = "#3F3F3F";
const FOCUSED_BACKGROUND_COLOR = "#FC461B";
const TITLE_COLOR2 = "#EFEFEF";

const Image = "Image";
const View = "View";
const Text = "Text";

const containerStyles = {
  flex: 1,
  flexDirection: "column",
  width: 384,
  height: 436,
  borderRadius: 4,
  backgroundColor: BACKGROUND_COLOR,
  marginRight: 48,
  marginBottom: 48,
};

const focusedContainerStyles = {
  ...containerStyles,
  backgroundColor: FOCUSED_BACKGROUND_COLOR,
};

const imageStyle = {
  width: 384,
  height: 216,
  borderTopRightRadius: 4,
  borderTopLeftRadius: 4,
};

const titleContainerStyles = {
  width: 336,
  height: 60,
  marginHorizontal: 24,
  marginTop: 24,
  overflow: "hidden",
};

const titleStyles = {
  fontSize: 26,
  color: TITLE_COLOR2,
  fontWeight: "bold",
  fontStyle: "normal",
};

const subtitleContainerStyles = {
  width: 336,
  height: 88,
  marginHorizontal: 24,
  marginTop: 24,
  overflow: "hidden",
};

const subtitleStyles = {
  fontSize: 24,
  fontWeight: "normal",
  opacity: 0.8,
  color: TITLE_COLOR2,
  fontStyle: "normal",
};

const viewTree = state => [
  {
    type: View,
    style: state === "focused" ? focusedContainerStyles : containerStyles,
    elements: [
      {
        type: Image,
        style: imageStyle,
        data: [
          {
            func: "image_src_from_media_item",
            args: ["thumbnail-small"],
            propName: "uri",
          },
        ],
      },
      {
        type: View,
        style: titleContainerStyles,
        elements: [
          {
            type: Text,
            style: titleStyles,
            data: [
              {
                func: "path",
                args: ["title"],
                propName: "label",
              },
            ],
            additionalProps: {
              numberOfLines: 2,
            },
          },
        ],
      },
      {
        type: View,
        style: subtitleContainerStyles,
        elements: [
          {
            type: Text,
            style: subtitleStyles,
            data: [
              {
                func: "path",
                args: ["summary"],
                propName: "label",
              },
            ],
            additionalProps: {
              numberOfLines: 3,
            },
          },
        ],
      },
    ],
  },
];

export const fallbackCellStyle = {
  content_types: {
    default: {
      states: {
        default: viewTree("default"),
        focused: viewTree("focused"),
      },
    },
  },
};
