// @flow
import React from "react";
import { Animated } from "react-native";
import { useDimensions } from "@applicaster/zapp-react-native-utils/reactHooks/layout";

type PointerEvents = "box-none" | "none" | "box-only" | "auto";
type Props = {
  children: any,
  style: any,
  pointerEvents: PointerEvents,
};

/**
 * Animated View container for any purpose.
 * Renders given children with given style object.
 * Optional property: pointer event (e.g. to prevent interaction with animating scene).
 * @param {React.Component} children Just about anything
 * @param {object} style             Container style
 * @param {} pointerEvents           box-none|none|box-only|auto (default)
 */
export function Scene({ children, style, pointerEvents = "auto" }: Props) {
  const dimensions = useDimensions();
  return (
    <Animated.View
      pointerEvents={pointerEvents}
      style={[style, { ...dimensions }]}
    >
      {children}
    </Animated.View>
  );
}
