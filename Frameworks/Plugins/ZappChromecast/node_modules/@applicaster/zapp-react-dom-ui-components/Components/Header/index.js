// @flow
import * as React from "react";
import { Text } from "react-native";
import * as R from "ramda";
import { hot } from "react-hot-loader";
import { ContainerWrapperView } from "../ContainerWrapperView";
import { connectToStore } from "@applicaster/zapp-react-native-redux";
import { fixColorHexCode } from "@applicaster/zapp-react-native-utils/stylesUtils";

type Props = {
  styles: ?{},
  textStyle: ?{},
  title: string,
  visible: boolean,
  data: { target: string | null },
  styles: {},
};

const baseStyles = {
  color: "white",
  fontSize: 36,
  marginLeft: 114,
  marginRight: 114,
  fontFamily: "Helvetica, Arial, Sans-serif",
};

function HeaderComponent({ title, visible, data, styles, textStyle }: Props) {
  if (!visible) {
    return null;
  }

  const color = R.path(["tv", "header_font_style", "color"], styles);
  const fontSizeHeader = Number(
    R.path(["tv", "header_font_style", "font_size"], styles)
  );
  const fontFamily = R.path(["tv", "header_font_style", "font"], styles);

  const headerColor = fixColorHexCode(color);

  const defaultTextStyles = {
    color: headerColor || "white",
    fontFamily: fontFamily || "Helvetica, Arial, sans-serif",
    fontWeight: "700",
    fontSize: fontSizeHeader,
    flex: 1,
    display: "flex",
  };

  const textStyles = textStyle || defaultTextStyles;

  return (
    <ContainerWrapperView style={R.merge(baseStyles, styles)}>
      {() => <Text style={textStyles}>{title}</Text>}
    </ContainerWrapperView>
  );
}

export const Header = R.compose(
  connectToStore(R.pick(["styles"])),
  hot(module)
)(HeaderComponent);
