// @flow
import * as React from "react";
import { ActivityIndicator } from "react-native";

import {
  favoritesListener,
  getAllFavorites,
} from "@applicaster/zapp-react-native-bridge/Favorites";
import { FavoritesComponent } from "./FavoritesComponent";

const createFeed = (entry) => ({
  type: { value: "feed" },
  title: "Favorites",
  entry,
});

type Props = {
  screenData: {
    ui_components: [{ id: string }],
  },
};

export function Favorites({ screenData }: Props) {
  const [favouritesFeed, setFavouritesFeed] = React.useState(null);
  let disposeHandler;

  const fetchFavourites = async (newFavorites, dispose) => {
    if (dispose && !disposeHandler) {
      disposeHandler = dispose;
    }

    if (newFavorites) {
      setFavouritesFeed(createFeed(newFavorites));
    } else {
      const favorites = await getAllFavorites();
      setFavouritesFeed(createFeed(favorites));
    }
  };

  React.useEffect(() => {
    favoritesListener.on("FAVORITES_CHANGED", fetchFavourites);
    fetchFavourites();

    return () => {
      if (disposeHandler) {
        disposeHandler({});
      }
    };
  }, []);

  if (!favouritesFeed) {
    return <ActivityIndicator />;
  }

  const component = screenData?.ui_components?.[0];

  return <FavoritesComponent component={component} feed={favouritesFeed} />;
}
