/* eslint-disable no-extra-parens */
import React from "react";
import * as R from "ramda";
import { ActivityIndicator } from "react-native";
import { Focusable } from "@applicaster/zapp-react-native-ui-components/Components/Focusable";
import { FocusableGroup } from "@applicaster/zapp-react-native-ui-components/Components/FocusableGroup";
import { forceFocusableFocus } from "@applicaster/zapp-react-native-utils/appUtils/focusManager";
import { getAppStylesColor } from "@applicaster/zapp-react-native-utils/stylesUtils";
import { isAppleTV } from "../../../Helpers/Platform";

type Props = {
  styles: {},
};

const bufferStyles = {
  flex: 1,
  width: "100%",
  height: "100%",
  alignItems: "center",
  justifyContent: "center",
  paddingTop: 500,
};

const bufferFocusableGroupName = "PlayerWrapper-BufferAnimationComponent";
const bufferFocusableName = "PlayerWrapper-BufferAnimationComponent-Focusable";

export class BufferAnimationComponent extends React.PureComponent<Props> {
  componentDidMount() {
    if (isAppleTV()) {
      forceFocusableFocus(bufferFocusableGroupName, bufferFocusableName);
    }
  }

  render() {
    const { styles } = this.props;
    const appStyles = R.prop("universal", styles);
    const color = getAppStylesColor("loading_spinner_color", appStyles);

    return (
      <FocusableGroup id={bufferFocusableGroupName} style={bufferStyles}>
        <Focusable
          id={bufferFocusableName}
          groupId={bufferFocusableGroupName}
          isParallaxDisabled={true}
          isPressDisabled={true}
        >
          {isAppleTV() ? (
            <ActivityIndicator color={color} size="large" />
          ) : (
            (focused) => <ActivityIndicator color={color} size="large" />
          )}
        </Focusable>
      </FocusableGroup>
    );
  }
}
