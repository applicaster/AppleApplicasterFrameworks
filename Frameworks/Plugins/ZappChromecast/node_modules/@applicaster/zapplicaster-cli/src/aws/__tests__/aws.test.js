const aws = require("../index");

const { s3 } = aws;

jest.mock("aws-sdk");

describe("aws module", () => {
  const Key = "ObjectPath";

  it("rejects the promise if an error occurs", async () => {
    expect.assertions(1);
    try {
      await aws.getContent("THROW");
    } catch (e) {
      expect(e).toMatchSnapshot();
    }
  });

  it("returns the list of objects", async () => {
    expect(await aws.list(Key)).toEqual(["list", "of", "objects"]);
    expect(s3.listObject).toHaveBeenLastCalledWith(
      { Prefix: Key },
      expect.any(Function)
    );
  });

  it("gets the content of an object", async () => {
    expect(await aws.getContent(Key)).toEqual(JSON.stringify({ bar: "baz" }));
    expect(s3.getObject).toHaveBeenLastCalledWith(
      { Key },
      expect.any(Function)
    );
  });

  it("gets the ETag of an object", async () => {
    expect(await aws.getEtag(Key)).toEqual("ETag_value");
    expect(s3.getObject).toHaveBeenLastCalledWith(
      { Key },
      expect.any(Function)
    );
  });

  it("sets an object", async () => {
    const data = "some data";
    await aws.set(Key, data);

    expect(s3.putObject).toHaveBeenLastCalledWith(
      {
        Key,
        Body: Buffer.from(data),
        ACL: "public-read",
      },
      expect.any(Function)
    );
  });

  it("removes an object", async () => {
    await aws.remove(Key);
    expect(s3.deleteObject).toHaveBeenLastCalledWith(
      { Key },
      expect.any(Function)
    );
  });
});
