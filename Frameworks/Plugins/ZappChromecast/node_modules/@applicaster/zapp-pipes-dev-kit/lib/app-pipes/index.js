"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.createZappPipesLibrary = createZappPipesLibrary;

var _url = require("url");

var _url2 = _interopRequireDefault(_url);

var _ravenJs = require("raven-js");

var _ravenJs2 = _interopRequireDefault(_ravenJs);

var _Base = require("../Base64");

var _ramda = require("ramda");

var _router = require("../router");

var _queryString = require("query-string");

var _queryString2 = _interopRequireDefault(_queryString);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function createZappPipesLibrary(_ref) {
  var release = _ref.release,
      providers = _ref.providers,
      nativeBridge = _ref.nativeBridge;

  var router = (0, _router.createRouterForProviders)(providers, nativeBridge);

  return function getData(URL, callback) {
    _ravenJs2.default.config("https://dcf6d288b99a42c09db8eed5e62d8aa3@sentry.io/158270", {
      release: release
    }).install();

    var h = {
      response: function response(_response) {
        return {
          code: function code(_code) {
            return callback({ URL: URL, code: _code, response: _response });
          }
        };
      }
    };

    var parsedURL = _url2.default.parse(URL, true);
    var scheme = parsedURL.protocol.replace(":", "");
    var request = scheme.indexOf("http") > -1 ? {
      params: {
        provider: "applicaster"
      },
      query: {
        type: "APPLICASTER_ATOM_FEED",
        url: encodeURIComponent((0, _Base.btoa)(URL))
      }
    } : {
      params: {
        provider: scheme
      },
      query: _queryString2.default.parse(parsedURL.search)
    };

    router.handler(request, h);
  };
}