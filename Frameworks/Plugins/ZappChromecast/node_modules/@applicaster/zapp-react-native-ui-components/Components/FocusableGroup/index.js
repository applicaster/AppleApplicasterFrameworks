// @flow
import * as React from "react";

import { BaseFocusable } from "../BaseFocusable";

type Props = {
  shouldUsePreferredFocus: boolean,
  id: string,
  node: {},
  children: React.ComponentType<any>,
  preferredFocus: ?boolean,
  style: {},
  prioritiseFocusOn: Number,
};

export class FocusableGroup extends BaseFocusable<Props> {
  constructor(props) {
    super(props);
    this.isGroup = true;
    this.shouldUsePreferredFocus = this.shouldUsePreferredFocus.bind(this);
    this.isPreferredFocus = this.isPreferredFocus.bind(this);
  }

  getId() {
    const { id } = this.props;
    return id;
  }

  /**
   * tells whether the group should give focus to a preferred item when it gains focus from another
   * group
   * @returns {boolean}
   */
  shouldUsePreferredFocus() {
    return this.props.shouldUsePreferredFocus || false;
  }

  /**
   * indicates whether the underlying component should claim preferred focus
   * when navigating into the group of this item
   * @returns {boolean}
   */
  isPreferredFocus() {
    return this.props.preferredFocus || false;
  }

  render() {
    const { children, id, style } = this.props;
    return (
      <div id={`focusable-group-${id}`} style={style} ref={this.ref}>
        {children}
      </div>
    );
  }
}
