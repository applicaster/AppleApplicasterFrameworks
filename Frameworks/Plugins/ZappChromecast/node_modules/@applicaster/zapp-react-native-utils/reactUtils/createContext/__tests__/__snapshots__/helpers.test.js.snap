// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`createContextSetters when no state validator is provided calls setState when the setters are called, no matter what the value is 1`] = `
Object {
  "bar": "bar",
  "foo": "foo",
}
`;

exports[`createContextSetters when no state validator is provided calls setState when the setters are called, no matter what the value is 2`] = `
Object {
  "bar": "bar",
  "foo": "invalid foo",
}
`;

exports[`createContextSetters when no state validator is provided calls setState when the setters are called, no matter what the value is 3`] = `
Object {
  "bar": "invalid bar",
  "foo": "invalid foo",
}
`;

exports[`createContextSetters when no state validator is provided calls setState when the setters are called, no matter what the value is 4`] = `
Array [
  Array [
    [Function],
  ],
  Array [
    [Function],
  ],
]
`;

exports[`createContextSetters when state validator is provided calls setState when the setters are called & the validator passes 1`] = `
Object {
  "bar": "bar",
  "foo": "foo",
}
`;

exports[`createContextSetters when state validator is provided calls setState when the setters are called & the validator passes 2`] = `
Object {
  "bar": "bar",
  "foo": "new foo",
}
`;

exports[`createContextSetters when state validator is provided calls setState when the setters are called & the validator passes 3`] = `
Object {
  "bar": "new bar",
  "foo": "new foo",
}
`;

exports[`createContextSetters when state validator is provided calls setState when the setters are called & the validator passes 4`] = `
Array [
  Array [
    [Function],
  ],
  Array [
    [Function],
  ],
]
`;

exports[`createContextSetters when state validator is provided skips the update if the new value is the same as the previous one 1`] = `
Object {
  "bar": "bar",
  "foo": "new foo",
}
`;

exports[`createContextSetters when state validator is provided skips the update if the state validator doesn't pass 1`] = `
Object {
  "bar": "bar",
  "foo": "foo",
}
`;

exports[`createContextSetters when state validator is provided skips the update if the state validator doesn't pass 2`] = `
Object {
  "bar": "bar",
  "foo": "foo",
}
`;

exports[`createContextSetters when state validator is provided skips the update if the state validator doesn't pass 3`] = `
Object {
  "bar": "bar",
  "foo": "foo",
}
`;

exports[`createContextSetters when state validator is provided skips the update if the state validator doesn't pass 4`] = `
Array [
  Array [
    "trying to invoke setFoo with invalid foo - but it was rejected by the state validator
          skipping context update",
  ],
  Array [
    "trying to invoke setBar with invalid bar - but it was rejected by the state validator
          skipping context update",
  ],
]
`;
