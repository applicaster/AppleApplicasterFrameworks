import { pluginsLoader } from "../index";

const plugin1Module = jest.fn();

const plugin1 = {
  module: plugin1Module,
  name: "plugin 1",
  type: "general",
  identifier: "plugin_1",
};

const plugin2Module = jest.fn();

const plugin2 = {
  module: plugin2Module,
  name: "plugin 2",
  type: "general",
  identifier: "plugin_2",
};

const es6Module = jest.fn();

const es6DefaultPlugin = {
  module: { default: es6Module, __esModule: true },
  name: "ES6 default plugin",
  type: "general",
  identifier: "es6_default_export",
};

const plugins = [plugin1, plugin2, es6DefaultPlugin];

describe("plugins loader", () => {
  const pluginsToLoad = pluginsLoader(plugins);

  it("unwraps the plugin's module default property if exported as an es6 module default", () => {
    expect(pluginsToLoad).toEqual(
      expect.arrayContaining([
        {
          ...es6DefaultPlugin,
          module: es6Module,
        },
      ])
    );
  });

  it("leaves other plugins unchanged", () => {
    expect(pluginsToLoad).toEqual(expect.arrayContaining([plugin1, plugin2]));
  });
});
