// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`NavWrapper when navigation data doesn't exist renders correctly 1`] = `""`;

exports[`NavWrapper when navigation data exists and matches plugin renders correctly 1`] = `
<mockConstructor
  assets={
    Object {
      "appLogo": "appLogo.png",
    }
  }
  name="mockConstructor"
  nav_items={
    Array [
      Object {
        "type": "label",
      },
    ]
  }
  navigator={
    Object {
      "activeRiver": Object {
        "id": "A1234",
        "name": "foo",
        "navigations": Array [
          Object {
            "assets": Object {
              "appLogo": "appLogo.png",
            },
            "category": "menu",
            "nav_items": Array [
              Object {
                "type": "label",
              },
            ],
            "navigation_type": "default_nav",
            "rules": Object {},
          },
        ],
      },
    }
  }
  rules={Object {}}
  selected="A1234"
/>
`;

exports[`NavWrapper when navigation data exists and matches plugin renders correctly 2`] = `
<View
  assets={
    Object {
      "appLogo": "appLogo.png",
    }
  }
  name="mockConstructor"
  nav_items={
    Array [
      Object {
        "type": "label",
      },
    ]
  }
  navigator={
    Object {
      "activeRiver": Object {
        "id": "A1234",
        "name": "foo",
        "navigations": Array [
          Object {
            "assets": Object {
              "appLogo": "appLogo.png",
            },
            "category": "menu",
            "nav_items": Array [
              Object {
                "type": "label",
              },
            ],
            "navigation_type": "default_nav",
            "rules": Object {},
          },
        ],
      },
    }
  }
  rules={Object {}}
  selected="A1234"
/>
`;

exports[`NavWrapper when navigation data exists and plugin isn't found renders correctly 1`] = `
<mockConstructor
  assets={
    Object {
      "appLogo": "appLogo.png",
    }
  }
  name="mockConstructor"
  nav_items={
    Array [
      Object {
        "type": "label",
      },
    ]
  }
  navigator={
    Object {
      "activeRiver": Object {
        "id": "A1234",
        "name": "foo",
        "navigations": Array [
          Object {
            "assets": Object {
              "appLogo": "appLogo.png",
            },
            "category": "menu",
            "nav_items": Array [
              Object {
                "type": "label",
              },
            ],
            "navigation_type": "unknown_nav",
            "rules": Object {},
          },
        ],
      },
    }
  }
  rules={Object {}}
  selected="A1234"
/>
`;

exports[`NavWrapper when navigation data exists and plugin isn't found renders correctly 2`] = `
<View
  assets={
    Object {
      "appLogo": "appLogo.png",
    }
  }
  name="mockConstructor"
  nav_items={
    Array [
      Object {
        "type": "label",
      },
    ]
  }
  navigator={
    Object {
      "activeRiver": Object {
        "id": "A1234",
        "name": "foo",
        "navigations": Array [
          Object {
            "assets": Object {
              "appLogo": "appLogo.png",
            },
            "category": "menu",
            "nav_items": Array [
              Object {
                "type": "label",
              },
            ],
            "navigation_type": "unknown_nav",
            "rules": Object {},
          },
        ],
      },
    }
  }
  rules={Object {}}
  selected="A1234"
/>
`;

exports[`NavWrapper when navigation data exists and uses an existing plugin renders correctly 1`] = `
<mockConstructor
  assets={
    Object {
      "appLogo": "appLogo.png",
    }
  }
  name="mockConstructor"
  nav_items={
    Array [
      Object {
        "type": "label",
      },
    ]
  }
  navigator={
    Object {
      "activeRiver": Object {
        "id": "A1234",
        "name": "foo",
        "navigations": Array [
          Object {
            "assets": Object {
              "appLogo": "appLogo.png",
            },
            "category": "menu",
            "nav_items": Array [
              Object {
                "type": "label",
              },
            ],
            "navigation_type": "optional_nav",
            "rules": Object {},
          },
        ],
      },
    }
  }
  rules={Object {}}
  selected="A1234"
/>
`;

exports[`NavWrapper when navigation data exists and uses an existing plugin renders correctly 2`] = `
<View
  assets={
    Object {
      "appLogo": "appLogo.png",
    }
  }
  name="mockConstructor"
  nav_items={
    Array [
      Object {
        "type": "label",
      },
    ]
  }
  navigator={
    Object {
      "activeRiver": Object {
        "id": "A1234",
        "name": "foo",
        "navigations": Array [
          Object {
            "assets": Object {
              "appLogo": "appLogo.png",
            },
            "category": "menu",
            "nav_items": Array [
              Object {
                "type": "label",
              },
            ],
            "navigation_type": "optional_nav",
            "rules": Object {},
          },
        ],
      },
    }
  }
  rules={Object {}}
  selected="A1234"
/>
`;
