/* eslint-disable max-len */
import * as R from "ramda";

export const AnalyticsBridge = (function() {
  let registeredAnalyticPlugins = [];

  return {
    postEvent: function(eventName, payload) {
      registeredAnalyticPlugins.forEach(plugin => {
        plugin.module.sendEvent(eventName, payload);
      });
    },
    endTimedEvent: function(eventName, payload) {
      registeredAnalyticPlugins.forEach(plugin => {
        plugin.module.sendEvent(eventName, payload);
      });
    },
    postTimedEvent: function(eventName, payload) {
      registeredAnalyticPlugins.forEach(plugin => {
        plugin.module.sendEvent(eventName, payload);
      });
    },
    setPlugins: function(plugins, configs, callbackAfterInitilaize) {
      registeredAnalyticPlugins = plugins;
      plugins.forEach(plugin => {
        return R.path(["module", "initialize"], plugin)
          ? plugin.module.initialize(plugin.configuration || {})
          : null;
      });
      callbackAfterInitilaize();
    },
  };
})();
