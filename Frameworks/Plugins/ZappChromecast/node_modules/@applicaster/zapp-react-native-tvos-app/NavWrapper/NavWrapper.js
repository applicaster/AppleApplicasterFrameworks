// @flow
import * as React from "react";
import {
  resolveNavigationPlugin,
  getNavigationProps,
} from "@applicaster/zapp-react-native-utils/navigationUtils";
type Props = {
  activeRiver: any,
  navigator: any,
  children: React.ComponentType<any>,
  components: { [string]: React.ComponentType<any> },
  plugins: [{ module: any, type: string, name: string }],
  rivers: { [string]: any },
  pluginConfigurations: {},
  location: {},
  homeId: string,
  isHidden: boolean,
};

export function NavWrapperComponent({
  navigator,
  plugins,
  rivers,
  pluginConfigurations,
  location,
  homeId,
  isHidden,
}: Props) {
  const {
    activeRiver,
    activeRiver: { navigations },
  } = navigator;

  const menuPlugin = resolveNavigationPlugin({
    category: "menu",
    navigations,
    plugins,
  });

  const navigationProps = getNavigationProps({ navigator, category: "menu" });
  const MenuPlugin = menuPlugin.module;

  return MenuPlugin ? (
    <MenuPlugin
      isHidden={isHidden}
      homeId={homeId}
      menuProps={navigationProps}
      activeRiver={activeRiver}
      navigator={navigator}
      plugins={plugins}
      rivers={rivers}
      pluginConfigurations={pluginConfigurations}
      location={location}
    />
  ) : null;
}
