// @flow

import * as React from "react";
import { View } from "react-native";

import * as styles from "../styles";
import { NavItem } from "./NavItem";
import { focusableItemIdByData } from "../helpers.js";
type NavigationContainerProps = {
  nav_items: [any],
  selectedItem: any,
  homeItemId: string,
  onNavigationItemFocus: () => void,
  onNavigationItemBlur: () => void,
  state: {},
  navigationType: string,
  navigator: any,
  isFocusableDisabled: boolean,
  menuStyles: {},
  isUserSelectingItems: boolean,
};

function styleByNavigationType(navigationType) {
  if (navigationType === "center") {
    return styles.navigationCenterContainer;
  } else if (navigationType === "left") {
    return styles.navigationLeftContainer;
  } else if (navigationType === "right") {
    return styles.navigationRightContainer;
  }
}

export function NavigationContainer({
  nav_items,
  homeItemId,
  onNavigationItemFocus,
  onNavigationItemBlur,
  navigationType,
  navigator,
  isFocusableDisabled,
  selectedItem,
  menuStyles,
}: NavigationContainerProps) {
  const shouldHideNavigationButtons = navigator.canGoBack();
  const selectedItemId = selectedItem && focusableItemIdByData(selectedItem);
  return (
    <View style={styleByNavigationType(navigationType)}>
      {nav_items.map((item, index) => {
        const { targetId, focused = false } = item;
        const currentItemId = focusableItemIdByData(item);

        return (
          <NavItem
            isFocusableDisabled={isFocusableDisabled}
            shouldHideNavigationButtons={shouldHideNavigationButtons}
            navigationType={navigationType}
            key={index}
            index={index}
            homeItemId={homeItemId}
            item={item}
            onNavigationItemFocus={onNavigationItemFocus}
            onNavigationItemBlur={onNavigationItemBlur}
            shouldHaveFocus={focused}
            isSelected={targetId ? currentItemId === selectedItemId : false}
            menuStyles={menuStyles}
            preferredFocus={targetId ? currentItemId === selectedItemId : false}
          />
        );
      })}
    </View>
  );
}
