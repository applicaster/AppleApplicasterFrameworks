import { NativeModules } from "react-native";

import { parseJsonIfNeeded } from "@applicaster/zapp-react-native-utils/functionUtils";

// eslint-disable-next-line prefer-promise-reject-errors
const nullPromise = () => Promise.reject("LocalStorage bridge is null");
const defaultLocalStorage = {
  setItem: nullPromise,
  getItem: nullPromise,
  getAllItems: nullPromise,
};
const { LocalStorage = defaultLocalStorage } = NativeModules;

export const localStorage = {
  /**
   * Set value to local storage dict for key in namespace domain
   * @param  {String} key  The key with which to associate the value.
   * @param  {String} value The object to store in storage.
   * @param  {String} namespace Namespace that will be used for save item.
   *  If namespace === null. Default namespace `applicaster.v2`
   */
  setItem(key, value, namespace = null) {
    if (key && value) {
      return LocalStorage.setItem(key, JSON.stringify(value), namespace);
    }
  },

  /**
   * Get value from local storage dict for key in namespace domain
   * @param  {String} key  The key with which to associate the value.
   * @param  {String} namespace Namespace that will be used for save item.
   *  If namespace === null. Default namespace `applicaster.v2`
   */
  getItem(key, namespace = null) {
    return LocalStorage.getItem(key, namespace).then(parseJsonIfNeeded);
  },

  /**
   * Get All values from local storage dict for key in namespace domain
   */
  getAllItems(namespace = null) {
    return LocalStorage.getAllItems(namespace)
      .then(parseJsonIfNeeded)
      .catch(error => {
        throw error;
      });
  },
};
