// @flow
import * as React from "react";
import * as R from "ramda";
import { View } from "react-native";

import { River } from "../../River";
import { screenContainerStyle } from "../styles";
import { riverFocusManager } from "@applicaster/zapp-react-native-utils/appUtils/RiverFocusManager";

type Props = {
  targetRiverId: string,
  selectedItem: {},
};

export class ScreenContainerComponent extends React.Component<Props> {
  componentDidUpdate(prevProps, prevState, snapshot) {
    if (
      R.compose(
        R.not,
        R.equals
      )(prevProps.targetRiverId, this.props.targetRiverId)
    ) {
      riverFocusManager.clearScreenData({
        screenId: prevProps.targetRiverId,
        isInsideContainer: true,
      });
    }
  }
  render() {
    const { selectedItem, targetRiverId } = this.props;
    const feedUrl = R.path(["content", "src"], selectedItem);

    if (!selectedItem) {
      return null;
    }

    return (
      <View style={screenContainerStyle}>
        <River
          screenId={targetRiverId}
          feedUrl={feedUrl}
          isInsideContainer={true}
        />
      </View>
    );
  }
}
