const R = require("ramda");
const camelize = require("camelize");
const { resolve } = require("path");

const mapKeys = R.curry((fn, obj) => {
  return R.fromPairs(R.map(R.adjust(0, fn), R.toPairs(obj)));
});

const packageJson = require("./package.json");
const repoDependencies = [
  { name: "@applicaster/zapp-react-dom-app" },
  { name: "@applicaster/zapp-react-dom-ui-components" },
  { name: "@applicaster/zapp-react-native-ui-components" },
  { name: "@applicaster/quick-brick-core" },
  { name: "@applicaster/babel-preset-quick-brick", type: "devDependencies" },
  { name: "webpack", type: "devDependencies" },
  { name: "html-webpack-plugin", type: "devDependencies" },
].map(({ name, type = "dependencies" }) => ({
  name,
  version: packageJson.dependencies[name],
  type,
}));

function storeFromAppData({ store }) {
  switch (store) {
    case "lg_content_store":
      return "lg";

    case "samsung_app_store":
      return "samsung";

    default:
      return "web";
  }
}

function addOtherKeys(appData) {
  return {
    ...appData,
    bver: appData.versionName,
    os_type: "web",
    platform: "web",
    store: storeFromAppData(appData),
    uuid: "1234", // used as a fallback in rare cases when a browser-related uuid can't be generated
  };
}

// eslint-disable-next-line max-len
module.exports = {
  configFiles: [
    {
      name: "appData.json",
      getJsonContent: R.compose(
        addOtherKeys,
        mapKeys(camelize),
        mapKeys(R.replace("applicaster2_", "")),
        mapKeys(R.replace("api_private_key", "api_secret_key")),
        R.pick([
          "applicaster2_account_id",
          "accounts_account_id",
          "broadcaster_id",
          "bundle_identifier",
          "api_private_key",
          "app_version_id",
          "version_name",
          "rivers_configuration_id",
          "store",
        ]),
        R.prop("buildParams")
      ),
    },
  ],
  files: {
    templatePath: resolve(__dirname, "files"),
    filesToCopy: [
      "webpack.config.dev.babel.js",
      "webpack.config.prod.babel.js",
      "_package.json",
      "index.html",
    ],
    filesToRender: [
      {
        templatePath: resolve(__dirname, "index.js.ejs"),
        filePath: "index.js",
      },
      {
        templatePath: resolve(__dirname, "webpack.config.common.babel.js.ejs"),
        filePath: "webpack.config.common.babel.js",
      },
      {
        templatePath: resolve(__dirname, "./files/config/index.js.ejs"),
        filePath: ({ platform }) => `config/index.${platform}.js`,
      },
    ],
  },
  dependencies: [
    ...repoDependencies,
    {
      name: "react-native",
      version: "0.59.10",
      type: "dependencies",
    },
    { name: "react", version: "16.8.3", type: "dependencies" },
    { name: "buffer", version: "^5.1.0", type: "dependencies" },
    { name: "events", version: "^3.0.0", type: "dependencies" },
    { name: "history", version: "^4.7.2", type: "dependencies" },
    { name: "ramda", version: "^0.25.0", type: "dependencies" },
    { name: "react-art", version: "^16.6.0", type: "dependencies" },
    { name: "react-dom", version: "^16.3.2", type: "dependencies" },
    { name: "react-hot-loader", version: "^4.3.8", type: "dependencies" },
    { name: "react-native-web", version: "0.11.5", type: "dependencies" },
    { name: "react-redux", version: "^5.0.7", type: "dependencies" },
    { name: "react-router-dom", version: "^4.3.1", type: "dependencies" },
    { name: "react-redux", version: "5.0.7", type: "dependencies" },
    { name: "redux", version: "^3.7.2", type: "dependencies" },
    { name: "redux-thunk", version: "^2.3.0", type: "dependencies" },
    { name: "stream", version: "^0.0.2", type: "dependencies" },
    { name: "timers", version: "^0.1.1", type: "dependencies" },
    { name: "typeface-montserrat", version: "^0.0.54", type: "dependencies" },
    { name: "video.js", version: "^7.2.2", type: "dependencies" },
    { name: "babel-loader", version: "^7.1.4", type: "devDependencies" },
    { name: "@babel/polyfill", version: "^7.6.0", type: "dependencies" },
    { name: "css-loader", version: "^1.0.0", type: "devDependencies" },
    { name: "eslint", version: "^4.19.1", type: "devDependencies" },
    {
      name: "eslint-plugin-babel",
      version: "^5.1.0",
      type: "devDependencies",
    },
    {
      name: "eslint-plugin-import",
      version: "^2.11.0",
      type: "devDependencies",
    },
    {
      name: "eslint-plugin-react",
      version: "^7.7.0",
      type: "devDependencies",
    },
    { name: "file-loader", version: "^1.1.11", type: "devDependencies" },
    { name: "flow-bin", version: "^0.107.0", type: "devDependencies" },
    {
      name: "html-webpack-plugin",
      version: "^3.2.0",
      type: "devDependencies",
    },
    {
      name: "html-loader",
      version: "^0.5.5",
      type: "devDependencies",
    },
    { name: "postcss-loader", version: "^3.0.0", type: "devDependencies" },
    {
      name: "remote-redux-devtools",
      version: "^0.5.12",
      type: "devDependencies",
    },
    { name: "style-loader", version: "^0.22.1", type: "devDependencies" },
    { name: "url-loader", version: "^1.1.0", type: "devDependencies" },
    { name: "webpack", version: "^4.1.1", type: "devDependencies" },
    { name: "webpack-cli", version: "^3.1.0", type: "devDependencies" },
    {
      name: "webpack-dev-server",
      version: "^3.1.10",
      type: "devDependencies",
    },
    { name: "webpack-merge", version: "^4.1.4", type: "devDependencies" },
    { name: "redux-logger", version: "^3.0.6", type: "devDependencies" },
  ],
  scripts: [
    {
      name: "start",
      command:
        "node_modules/.bin/webpack-dev-server --hotOnly --config webpack.config.dev.babel.js",
    },
    {
      name: "build",
      command:
        // eslint-disable-next-line max-len
        "NODE_ENV=production webpack --progress --colors --config webpack.config.prod.babel.js",
    },
  ],
};
