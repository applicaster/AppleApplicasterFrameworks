'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _resolver = require('../resolver');

var _ravenJs = require('raven-js');

var _ravenJs2 = _interopRequireDefault(_ravenJs);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/* global getAppData */
function sendResponse(response) {
  var code = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 200;

  return (0, _resolver.resolver)({ code: code, response: response });
}

function log() {
  var _console;

  (_console = console).log.apply(_console, arguments);
}

function throwError(reason) {
  console.warn(reason);
  try {
    _ravenJs2.default.captureException(new Error(reason));
  } catch (traceKitException) {
    console.warn(traceKitException);
  }
  return sendResponse(reason, 500);
}

function appData() {
  return typeof getAppData === 'function' ? getAppData() : {
    platform: 'ios',
    bundleIdentifier: 'com.river',
    accountId: 338,
    broadcasterId: 371,
    uuid: 'uuid'
  };
}

function getSessionStoreItem(key, namespace) {
  return typeof getSessionItem === 'function' ? getSessionItem(key, namespace) : null;
}

function setSessionStoreItem(key, value, namespace) {
  if (typeof setSessionItem === 'function') {
    setSessionItem(key, value, namespace);
  }
}

function getAllSessionItems() {
  return typeof getAllItems === 'function' ? getAllItems() : null;
}

function getLocalStoreItem(key, namespace) {
  return typeof getLocalItem === 'function' ? getLocalItem(key, namespace) : null;
}

function setLocalStoreItem(key, value, namespace) {
  if (typeof setLocalItem === 'function') {
    setLocalItem(key, value, namespace);
  }
}

exports.default = {
  log: log,
  throwError: throwError,
  sendResponse: sendResponse,
  appData: appData,
  getSessionStoreItem: getSessionStoreItem,
  setSessionStoreItem: setSessionStoreItem,
  getAllSessionItems: getAllSessionItems,
  getLocalStoreItem: getLocalStoreItem,
  setLocalStoreItem: setLocalStoreItem
};