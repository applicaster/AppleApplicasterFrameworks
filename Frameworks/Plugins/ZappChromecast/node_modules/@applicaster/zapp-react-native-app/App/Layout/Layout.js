// @flow
import * as React from "react";
import { View } from "react-native";

import { getNavigationProps } from "@applicaster/zapp-react-native-utils/navigationUtils";
import { useDimensions } from "@applicaster/zapp-react-native-utils/reactHooks";

import { getNavigationPluginModule } from "./layoutHelpers";

type Props = {
  children: React.ComponentType<any>,
  plugins: [{ module: any, type: string, name: string }],
  toggleMenu: any,
  setToggleMenu: () => void,
  openMenu: any,
  setOpenMenu: () => void,
  closeMenu: any,
  setCloseMenu: () => void,
  appState: {
    appReady: boolean,
    appState: {
      isAvailable: boolean,
    },
  },
  navigator: {
    activeRiver: { home: boolean, name: string, id: string, navigations: [{}] },
    isNavBarVisible: boolean,
    pathname: string,
    screenTitle: ?string,
  },
};

const containerStyle = {
  height: "100%",
};

export function LayoutComponent(props: Props) {
  const {
    appState: { appReady = {} },
    plugins,
    children,
    navigator,
    toggleMenu,
    setToggleMenu,
    openMenu,
    setOpenMenu,
    closeMenu,
    setCloseMenu,
  } = props;

  const dimensions = useDimensions("window", true);

  const { activeRiver, isNavBarVisible } = navigator;
  const NavBar = getNavigationPluginModule("nav_bar", activeRiver, plugins);
  const Menu = getNavigationPluginModule("menu", activeRiver, plugins);
  return (
    <View>
      {appReady && (
        <View style={containerStyle}>
          {isNavBarVisible && (
            <NavBar
              setToggleMenu={setToggleMenu}
              toggleMenu={toggleMenu}
              openMenu={openMenu}
              setOpenMenu={setOpenMenu}
              closeMenu={closeMenu}
              setCloseMenu={setCloseMenu}
              navigator={navigator}
              {...getNavigationProps({
                navigator,
                category: "nav_bar",
              })}
            />
          )}
          {children}
        </View>
      )}
      {appReady && (
        <Menu
          setToggleMenu={setToggleMenu}
          toggleMenu={toggleMenu}
          openMenu={openMenu}
          setOpenMenu={setOpenMenu}
          closeMenu={closeMenu}
          setCloseMenu={setCloseMenu}
          dimensions={{ window: dimensions }}
          navigator={navigator}
          {...getNavigationProps({
            navigator,
            category: "menu",
          })}
        />
      )}
    </View>
  );
}
