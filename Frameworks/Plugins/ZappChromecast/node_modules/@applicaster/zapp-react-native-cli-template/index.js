const START_SCRIPT = "node_modules/.bin/react-native start";

const RUN_IOS_SCRIPT =
  "node_modules/.bin/react-native run-ios --project-path $ZAPP_APP_PATH --scheme Zapp-App --configuration Debug"; // eslint-disable-line max-len

const START_IOS_SCRIPT = "yarn run:ios & yarn start";

const BUILD_IOS_SCRIPT =
  "mkdir -p ios && node_modules/.bin/react-native bundle --platform ios --dev false --entry-file index.js --bundle-output ./ios/main.jsbundle --reset-cache"; // eslint-disable-line max-len

const BUILD_ANDROID_SCRIPT =
  "mkdir -p android && node_modules/.bin/react-native bundle --platform android --dev false --entry-file index.js --bundle-output ./android/main.jsbundle --reset-cache"; // eslint-disable-line max-len

const { resolve } = require("path");

const packageJson = require("./package.json");

const quickBrickDependencies = [
  { name: "@applicaster/zapp-react-native-app" },
  { name: "@applicaster/zapp-react-native-bridge" },
  { name: "@applicaster/zapp-react-native-ui-components" },
  { name: "@applicaster/quick-brick-core" },
  { name: "@applicaster/babel-preset-quick-brick", type: "devDependencies" },
].map(({ name, type = "dependencies" }) => ({
  name,
  type,
  version: packageJson.dependencies[name],
}));

module.exports = {
  files: {
    templatePath: resolve(__dirname, "./template"),
    filesToCopy: [".babelrc", "_package.json"],
    filesToRender: [
      {
        templatePath: resolve(__dirname, "./template/index.js.ejs"),
        filePath: "index.js",
      },
      {
        templatePath: resolve(__dirname, "./template/config/index.js.ejs"),
        filePath: config => `config/index.${config.platform}.js`,
      },
    ],
  },
  dependencies: [
    ...quickBrickDependencies,
    {
      name: "remote-redux-devtools",
      version: "^0.5.12",
      type: "devDependencies",
    },
    { name: "react", version: "16.8.3", type: "dependencies" },
    { name: "react-native", version: "0.59.10", type: "dependencies" },
    { name: "buffer", version: "^5.1.0", type: "dependencies" },
    { name: "events", version: "^3.0.0", type: "dependencies" },
    { name: "stream", version: "^0.0.2", type: "dependencies" },
    { name: "timers", version: "^0.1.1", type: "dependencies" },
  ],
  scripts: [
    {
      name: "start",
      command: START_SCRIPT,
    },
    {
      name: "run:ios",
      command: RUN_IOS_SCRIPT,
    },
    {
      name: "start:ios",
      command: START_IOS_SCRIPT,
    },
    {
      name: "zapplicaster:prepare",
      command: "node_modules/.bin/zapplicaster-cli prepare -d . -y",
    },
    {
      name: "zapplicaster:reload",
      command: "node_modules/.bin/zapplicaster-cli reload_config -d .",
    },
    {
      name: "build:ios",
      command: BUILD_IOS_SCRIPT,
    },
    {
      name: "build:android",
      command: BUILD_ANDROID_SCRIPT,
    },
  ],
};
