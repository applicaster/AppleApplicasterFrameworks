// @flow
import * as React from "react";
import * as R from "ramda";

import { getPathAttributes } from "@applicaster/zapp-react-native-utils/navigationUtils";
import { ScreenResolver } from "@applicaster/zapp-react-native-ui-components/Components/ScreenResolver";
import { TestId } from "./TestId";

import { useNavigation } from "@applicaster/zapp-react-native-utils/reactHooks/navigation";

type Props = { [string]: any };

/**
 * This component extracts the screenType & screenId based on location,
 * and reconciles data returned from hook plugins if needed
 * @param {Props}: see props above
 */
export function RouteManager(props: Props) {
  const navigator = useNavigation();
  const { currentRoute: pathname, routeData } = navigator;
  const pathAttributes = getPathAttributes({ pathname });

  const { screenType, screenId } = R.last(pathAttributes);
  const screenData = routeData();

  return (
    <TestId screenId={screenId}>
      <ScreenResolver
        screenType={screenType}
        screenId={screenId}
        screenData={screenData}
        {...props}
      />
    </TestId>
  );
}
