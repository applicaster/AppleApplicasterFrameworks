// @flow
import React from "react";
import { shallow } from "enzyme";
import { shallowToJson } from "enzyme-to-json";
import configureStore from "redux-mock-store";

import { LayoutComponent } from "../Layout";

const dimensions = {};
const activeRiver = {
  name: "river title",
  navigations: [
    {
      category: "nav_bar",
      navigation_type: "navigation_bar",
      assets: {},
      styles: {},
    },
    { category: "menu", navigation_type: "side_menu", assets: {}, styles: {} },
  ],
};

const navigator = {
  push: jest.fn(),
  showRiver: jest.fn(),
  canGoBack: jest.fn(() => true),
  goBack: jest.fn(),
  routeData: jest.fn(),
  activeRiver,
};
const children = jest.fn();

const plugins = [
  {
    module: jest.fn(),
    type: "nav_bar",
    default: true,
  },
  {
    module: jest.fn(),
    type: "menu",
    default: true,
  },
];

const components = {
  NavigationBar: jest.fn(),
  SideMenu: jest.fn(),
};

const appState = {
  appReady: true,
};

const layoutComponentProps = {
  dimensions,
  navigator,
  children,
  plugins,
  components,
  appState,
};

const store = configureStore()({ components, plugins });

describe("<LayoutComponent />", () => {
  it("renders correctly", () => {
    const wrapper = shallow(<LayoutComponent {...layoutComponentProps} />, {
      context: { store },
    });
    expect(shallowToJson(wrapper)).toMatchSnapshot();
  });

  it("throws an error if nav_bar and menu plugins cannot be found", () => {
    const wrapper = <LayoutComponent {...layoutComponentProps} plugins={[]} />;

    expect(() => {
      shallow(wrapper, { context: { store } });
    }).toThrowErrorMatchingSnapshot();
  });
});
