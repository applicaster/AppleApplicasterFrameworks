const merge = require("webpack-merge");
const common = require("./webpack.config.common.babel.js");
const path = require("path");
const webpack = require("webpack");
// devtool: 'inline-source-map'

module.exports = merge(common, {
  output: {
    path: path.resolve(__dirname, "./public"),
    /**
     * Output is defined in common but overriden here as public path requirements differ
     */
    publicPath: "/",
    filename: "[hash:10].bundle.js",
  },
  mode: "development",
  devtool: "inline-source-map",
  entry: {
    app: ["@babel/polyfill", path.resolve(__dirname, "./index.js")],
  },
  devServer: {
    host: "0.0.0.0",
    contentBase: "./",
    hot: true,
    inline: true,
    port: process.env.PORT || 4000,
    historyApiFallback: true,
    noInfo: false,
    lazy: false,
    headers: { "Access-Control-Allow-Origin": "*" },
    stats: {
      colors: true,
      hash: false,
      version: false,
      chunks: false,
      children: false,
    },
  },
  plugins: [
    new webpack.DefinePlugin({
      "process.env": {
        NODE_ENV: JSON.stringify("development"),
      },
      __DEV__: true,
    }),
    new webpack.HotModuleReplacementPlugin(),
  ],
});
