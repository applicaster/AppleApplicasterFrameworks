const preset = require("../index");

jest.mock("@babel/core");
const babel = require("@babel/core");

describe("babel preset", () => {
  it("throws when no platform option is provided", () => {
    expect(() => {
      preset(babel, {});
    }).toThrowErrorMatchingSnapshot();
  });

  it("throws when a invalid platform is used", () => {
    expect(() => {
      preset(babel, { platform: "foo" });
    }).toThrowErrorMatchingSnapshot();
  });

  it("sets the proper configuration for web", () => {
    const config = { platform: "web", env: { target: "chrome 38" } };
    expect(preset(babel, config)).toMatchSnapshot();
  });

  it("sets the proper configuration for web", () => {
    const config = { platform: "native" };
    expect(preset(babel, config)).toMatchSnapshot();
  });

  it("forwards the env options to the env preset", () => {
    const config = { env: { target: { chrome: "38" } }, platform: "web" };
    expect(preset(babel, config)).toMatchSnapshot();
  });
});
