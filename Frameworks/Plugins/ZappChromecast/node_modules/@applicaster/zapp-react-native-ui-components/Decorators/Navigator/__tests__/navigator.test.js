jest.mock("react-router-native", () => require("./react-router-native-mock"));

const navigatorMock = {
  push: jest.fn(),
  replace: jest.fn(),
  canGoBack: jest.fn(),
  goBack: jest.fn(),
  routeData: jest.fn(),
  activeRiver: {},
  isNavBarVisible: true,
};

const mocked_context = navigatorMock;

jest.mock("react", () => {
  return {
    ...require.requireActual("react"),
    useContext: jest.fn(() => mocked_context),
  };
});

import { View } from "react-native";
import { shallow } from "enzyme";

const React = require("react");
const { withNavigator } = require("../index");

describe("withNavigator Decorator", () => {
  it("renders correctly", () => {
    const Component = () => <View />;
    const WrappedComponent = withNavigator(Component);

    const wrapper = shallow(<WrappedComponent someProp="foo" />);

    expect(wrapper).toMatchSnapshot();
    expect(wrapper.prop("navigator")).toEqual(navigatorMock);
  });
});
