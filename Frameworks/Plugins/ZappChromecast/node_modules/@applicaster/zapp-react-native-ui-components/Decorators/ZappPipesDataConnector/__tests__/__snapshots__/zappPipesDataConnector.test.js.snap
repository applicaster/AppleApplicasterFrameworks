// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`zappPipesDataConnector reloadDataSource reloads the app's datasource 1`] = `Array []`;

exports[`zappPipesDataConnector reloadDataSource reloads the app's datasource 2`] = `
Array [
  Object {
    "payload": "data",
    "type": "load_data",
  },
  Object {
    "payload": "data",
    "type": "load_data",
  },
]
`;

exports[`zappPipesDataConnector with Applicaster Category Id is a HoC 1`] = `
<ZappPipesConnector
  component={
    Object {
      "data": Object {
        "source": "1234",
        "type": "APPLICASTER_CATEGORY",
      },
    }
  }
  dispatch={[Function]}
  loadPipesData={[Function]}
  zappPipes={Object {}}
/>
`;

exports[`zappPipesDataConnector with Applicaster Category Id is a HoC 2`] = `
<Connect(HeroComponent)
  component={
    Object {
      "data": Object {
        "source": "1234",
        "type": "APPLICASTER_CATEGORY",
      },
    }
  }
  dispatch={[Function]}
  reloadData={[Function]}
/>
`;

exports[`zappPipesDataConnector with Applicaster Collection Id is a HoC 1`] = `
<ZappPipesConnector
  component={
    Object {
      "data": Object {
        "source": "1234",
        "type": "APPLICASTER_COLLECTION",
      },
    }
  }
  dispatch={[Function]}
  loadPipesData={[Function]}
  zappPipes={Object {}}
/>
`;

exports[`zappPipesDataConnector with Applicaster Collection Id is a HoC 2`] = `
<Connect(HeroComponent)
  component={
    Object {
      "data": Object {
        "source": "1234",
        "type": "APPLICASTER_COLLECTION",
      },
    }
  }
  dispatch={[Function]}
  reloadData={[Function]}
/>
`;

exports[`zappPipesDataConnector with standard dataSource is a HoC 1`] = `
<ZappPipesConnector
  component={
    Object {
      "data": Object {
        "source": "dataSourceUrl",
        "type": "APPLICASTER_ATOM_FEED",
      },
    }
  }
  dispatch={[Function]}
  loadPipesData={[Function]}
  zappPipes={Object {}}
/>
`;

exports[`zappPipesDataConnector with standard dataSource is a HoC 2`] = `
<Connect(HeroComponent)
  component={
    Object {
      "data": Object {
        "source": "dataSourceUrl",
        "type": "APPLICASTER_ATOM_FEED",
      },
    }
  }
  dispatch={[Function]}
  reloadData={[Function]}
/>
`;
