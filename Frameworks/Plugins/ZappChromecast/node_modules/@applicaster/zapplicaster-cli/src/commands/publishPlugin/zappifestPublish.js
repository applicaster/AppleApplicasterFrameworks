const R = require("ramda");
const { resolve } = require("path");
const { inspect } = require("util");

const { runInShellAsync } = require("../../shell");
const logger = require("../../logger");

function pushZappifest({ pluginPath, dryRun, zappOwnerAccountId }) {
  return async function(platform) {
    const manifestPath = resolve(pluginPath, `manifests/${platform}.json`);
    const publishCommand = `zappifest publish --manifest ${manifestPath} --account ${zappOwnerAccountId}`;

    if (dryRun) {
      logger.log(`running ${publishCommand}`);
      logger.log(`with manifest: ${inspect(require(manifestPath))}`);
      return true;
    }

    try {
      return await runInShellAsync(publishCommand);
    } catch (e) {
      throw e;
    }
  };
}

async function zappifestPublish(configuration) {
  const { platforms, pluginPath, dryRun, zappOwnerAccountId } = configuration;

  if (dryRun) {
    logger.log("Running with --dry-run option - not actually pushing to zapp");
  }

  try {
    return Promise.all(
      R.map(
        pushZappifest({ pluginPath, dryRun, zappOwnerAccountId }),
        platforms
      )
    );
  } catch (e) {
    throw e;
  }
}

module.exports = { zappifestPublish };
