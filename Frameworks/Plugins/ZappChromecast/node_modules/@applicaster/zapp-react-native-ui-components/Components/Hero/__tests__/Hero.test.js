import React from "react";
import { TouchableOpacity } from "react-native";
import { shallow } from "enzyme";
import { shallowToJson } from "enzyme-to-json";

import { HeroComponent } from "../Hero";

const feedData = {
  type: { value: "feed" },
  title: "feed title",
  entry: [
    {
      id: 123,
      title: "feed entry",
      link: { href: "dsp://" },
    },
  ],
};

const componentProps = {};

const componentPropsWithData = {
  CellRenderer: jest.fn(),
  data: { target: "A1234" },
  zappPipesData: {
    loading: false,
    data: feedData,
  },
  navigator: {
    push: jest.fn(),
  },
  component: {
    styles: { header: true, cell_styles: ["CELL_STYLES_1"] },
    data: { target: "A1234" },
  },
  onLoadFinished: jest.fn(),
};

describe("<HeroComponent />", () => {
  it("renders the placeholder correctly", () => {
    const wrapper = shallow(<HeroComponent {...componentProps} />);
    expect(shallowToJson(wrapper)).toMatchSnapshot();
  });

  it("renders the data correctly", () => {
    const wrapper = shallow(<HeroComponent {...componentPropsWithData} />);
    expect(shallowToJson(wrapper)).toMatchSnapshot();
  });

  describe("navigateTo", () => {
    const props = componentPropsWithData;
    const wrapper = shallow(<HeroComponent {...props} />);
    let navigateToSpy;

    beforeEach(() => {
      navigateToSpy = jest.spyOn(wrapper.instance(), "navigateTo");
    });

    afterEach(() => {
      navigateToSpy.mockRestore();
    });

    it("calls the navigator push prop", () => {
      wrapper.instance().navigateTo(feedData.entry[0]);
      expect(props.navigator.push).toHaveBeenCalled();
    });

    it("calls navigateTo when pressing on the button", () => {
      wrapper.find(TouchableOpacity).simulate("press");
      expect(navigateToSpy).toHaveBeenCalled();
    });
  });
});
