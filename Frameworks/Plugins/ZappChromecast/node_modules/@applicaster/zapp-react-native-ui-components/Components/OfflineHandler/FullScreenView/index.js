// @flow
import * as React from "react";
import {
  Text,
  TouchableOpacity,
  SafeAreaView,
  StyleSheet,
  Platform,
} from "react-native";
import ConnectivityIcon from "./assets/ConnectivityIcon";

const backgroundColor = "rgba(15,15,15, 1)";
const lightBlue = "rgba(2,121,255, 1)";
const textColor = "white";

const styles = StyleSheet.create({
  container: {
    flex: 1,
    alignItems: "center",
    justifyContent: "center",
    height: "100%",
    backgroundColor: backgroundColor,
    paddingHorizontal: 40,
  },
  text: {
    color: textColor,
    textAlign: "center",
    fontWeight: "400",
    fontSize: 15,
    lineHeight: 24,
    marginTop: 32,
    letterSpacing: Platform.OS === "ios" ? -0.21 : 0,
  },
  button: {
    marginTop: 40,
    width: 200,
    height: 44,
    backgroundColor: lightBlue,
    alignItems: "center",
    justifyContent: "center",
    borderRadius: 8,
  },
  buttonText: {
    fontWeight: "bold",
    fontSize: 14,
    textAlign: "center",
    color: textColor,
  },
});

type Props = {
  online: ?boolean,
  children: React.Node,
  hidden: boolean,
  onClose: void => void,
};

export const offlinePhrase =
  "There is a problem with your connection. \n Please try again later.";
export const onlinePhrase = "You're back online!";
export const FullScreenView = ({
  online,
  children,
  hidden,
  onClose,
}: Props): React.Node => {
  return hidden ? (
    children
  ) : (
    <SafeAreaView style={styles.container} testID="container">
      {!online && <ConnectivityIcon />}
      <Text style={styles.text} testID="text">
        {online ? onlinePhrase : offlinePhrase}
      </Text>
      {online && (
        <TouchableOpacity
          testID="button"
          style={styles.button}
          onPress={() => onClose()}
        >
          <Text style={styles.buttonText}>RETRY</Text>
        </TouchableOpacity>
      )}
    </SafeAreaView>
  );
};
