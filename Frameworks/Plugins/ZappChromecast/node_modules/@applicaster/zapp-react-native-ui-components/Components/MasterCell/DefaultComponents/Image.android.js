// @flow
import * as React from "react";
import { Image as RnImage } from "react-native";
import { basePath, fileExtension } from "../MappingFunctions/ImagePathMapper";

type Props = {
  style: any,
  uri: ?string,
  [string]: any,
  placeholderImage: ?string,
};
type State = {
  showDefault: boolean,
};
const placeholders = {
  "3.2": "placeholder_3_2",
};

export default class Image extends React.Component<Props, State> {
  constructor(props) {
    super(props);
    this.state = { showDefault: false };
  }
  combinePath(filename) {
    return `${basePath}${filename}${fileExtension}`;
  }
  getPlaceholderForAspectRatio(style) {
    const { aspectRatio } = style;

    return this.combinePath(placeholders[aspectRatio] || "placeholder");
  }

  getSource(uri, style) {
    const { showDefault } = this.state;
    const { placeholderImage } = this.props;
    const defaultPath = {
      uri:
        placeholderImage === undefined
          ? this.getPlaceholderForAspectRatio(style)
          : placeholderImage,
    };

    if (showDefault) return defaultPath;
    if (uri) {
      return { uri };
    }
    return defaultPath;
  }
  render() {
    const { style, uri, ...otherProps } = this.props;
    const source = this.getSource(uri, style);

    return (
      <RnImage
        style={style}
        source={source}
        onError={() => this.setState({ showDefault: true })}
        {...otherProps}
      />
    );
  }
}
