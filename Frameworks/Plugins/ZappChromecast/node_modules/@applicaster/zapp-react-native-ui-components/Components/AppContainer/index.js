// @flow
import * as React from "react";
import * as R from "ramda";
import { View } from "react-native";

import { useTheme } from "@applicaster/zapp-react-native-utils/theme";
import { platformSelect } from "@applicaster/zapp-react-native-utils/reactUtils";
import { fixColorHexCode } from "@applicaster/zapp-react-native-utils/stylesUtils";

const backgroundColorPath = platformSelect({
  ios: ["iphone", "background_color", "color"],
  tvos: ["universal", "background_color", "color"],
  samsung_tv: ["tv", "background", "color"],
  lg_tv: ["tv", "background", "color"],
  web: ["tv", "background", "color"],
  android: ["smartphone", "app_background_color", "color"],
  android_tv: ["android_tv", "app_background_color", "color"],
});

type Props = {
  styles: any,
  children: React.ComponentType<any>,
};

export function AppContainer({ styles, children }: Props) {
  const theme = useTheme();
  const { app_background_color } = theme;

  const backgroundColor = R.compose(
    fixColorHexCode,
    R.path(backgroundColorPath)
  )(styles);

  const containerStyles = {
    flex: 1,
    backgroundColor: app_background_color || backgroundColor,
  };

  return <View style={containerStyles}>{children}</View>;
}
