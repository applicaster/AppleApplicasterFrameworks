# iOS CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/ios-migrating-from-1-2/ for more details
#
version: 2.1
jobs:
  swiftlint:
    docker:
      - image: dantoml/swiftlint:latest
    steps:
      - checkout
      - run: swiftlint lint --reporter junit | tee result.xml
      - store_artifacts:
          path: result.xml
      - store_test_results:
          path: result.xml

  build:
    # Specify the Xcode version to use
    macos:
      xcode: "11.2.1"
    shell: /bin/bash --login -eo pipefail
    environment:
      GENERAL_CACHE_KEY: "AppleApplicasterFrameworks_Cache_1.0.0"
      PROJECT_NAME: "AppleApplicasterFrameworks"
      SCHEME_NAME: "AppleApplicasterFrameworks"
      DEPLOY_COMMAND: "~/.scripts-iOS/circleCi/deploySingleFrameworkMultiPlatform.sh"
    working_directory: ~/AppleApplicasterFrameworks
    steps:
      #Hack general caching until circle does not support global env variables
      - run: echo "$GENERAL_CACHE_KEY" > ~/_caching_file

      - run:
          name: Ruby - version
          command: ruby -v

      # Prepere Git
      - restore_cache:
          keys:
            - GIT-{{ checksum "~/_caching_file" }}-{{ .Branch }}-{{ .Revision }}
            - GIT-{{ checksum "~/_caching_file" }}-{{ .Branch }}-
            - GIT-{{ checksum "~/_caching_file" }}-

      - checkout

      - save_cache:
          name: Git - save cache
          key: GIT-{{ checksum "~/_caching_file" }}-{{ .Branch }}-{{ .Revision }}
          paths:
            - ".git"

      # Prepare Bundler
      - restore_cache:
          name: Bundler - restore cache
          key: Bundler-{{ checksum "~/_caching_file" }}-{{ checksum "Gemfile.lock" }}

      - run:
          name: Bundler - update dependencies
          command: bundle check --path=.bundle || bundle install --path=.bundle

      - save_cache:
          name: Bundler - save cache
          key: Bundler-{{ checksum "~/_caching_file" }}-{{ checksum "Gemfile.lock" }}
          paths:
            - /Users/distiller/.rubies/ruby-2.4.2/lib/ruby/gems/2.4.0/gems
            - ./.bundle

      # Restore Cocoapods cache, save cache on lower level, after pod install
      - restore_cache:
          keys:
            - CocoaPods-{{ checksum "~/_caching_file" }}-{{ .Branch }}-{{ .Revision }}
            - CocoaPods-{{ checksum "~/_caching_file" }}-{{ .Branch }}-
            - CocoaPods-{{ checksum "~/_caching_file" }}-

      - run:
          name: CocoaPods - version
          command: bundle exec pod --version

      # Pod update
      - run:
          name: CocoaPods - update dependencies
          command: bundle exec pod install

      # Cache CocoaPods
      - save_cache:
          name: CocoaPods - save cache
          key: CocoaPods-{{ checksum "~/_caching_file" }}-{{ .Branch }}-{{ .Revision }}
          paths:
            - "~/.cocoapods/repos/cocoapods-"

      # Tests
      - run:
          name: Tests - start
          command: bundle exec fastlane ios test

      - run:
          name: Validate Frameworks
          command: rake validate_existing_frameworks

      - deploy:
          name: Publish new or changed framework
          command: rake publish_frameworks

      - store_test_results:
          path: ./CircleArtifacts/test-results

      - store_artifacts:
          path: ./CircleArtifacts

      - store_artifacts:
          path: ~/Library/Logs/scan
          destination: scan-logs

workflows:
  version: 2
  build:
    jobs:
      - build
