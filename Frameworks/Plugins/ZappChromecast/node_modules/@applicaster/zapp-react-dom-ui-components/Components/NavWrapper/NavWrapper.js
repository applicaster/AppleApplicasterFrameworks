// @flow
import * as React from "react";

import {
  resolveNavigationPlugin,
  getNavigationProps,
} from "@applicaster/zapp-react-native-utils/navigationUtils";

type Props = {
  plugins: [
    {
      module: any,
      name: string,
      type: string,
      configuration: {},
      default: ?boolean,
    }
  ],
  navigator: {
    activeRiver: {
      navigations: [{}],
    },
  },
};

/**
 This component manages the navigation for the app. If no navigation exist,
 it will simply don't render anything
 If there is a navigation for the current activeRiver, it will be displayed.
 
 #### ON TV PLATFORMS, ONLY NAVIGATION OF TYPE MENU IS ACCEPTED ####

 @param {Array<Object>} plugins all the plugins known in the app
 @param {Object} navigator navigator object
 @returns {Function} React component
 */
export function NavWrapperComponent({
  plugins,
  navigator,
  navigator: {
    activeRiver,
    activeRiver: { navigations },
  },
}: Props) {
  const menuPlugin = resolveNavigationPlugin({
    category: "menu",
    navigations,
    plugins,
  });

  if (!menuPlugin) {
    // no navigation, we don't render anything;
    return null;
  }

  const navigationProps = getNavigationProps({ navigator, category: "menu" });
  const MenuPlugin = menuPlugin.module;

  return (
    <MenuPlugin
      name={MenuPlugin.name}
      navigator={navigator}
      configuration={MenuPlugin.configuration}
      {...navigationProps}
    />
  );
}
