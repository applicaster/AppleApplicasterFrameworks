// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<ScreenResolver /> renders correctly 1`] = `
<ScreenResolverComponent
  components={
    Object {
      "PlayerController": [MockFunction],
      "ScreenType1": [MockFunction],
      "ScreenType2": [MockFunction],
    }
  }
  dispatch={[Function]}
  plugins={
    Object {
      "PluginWithConfig": Object {
        "configuration": Object {
          "foo": "bar",
        },
        "identifier": "plugin-with-config",
        "module": [MockFunction],
        "name": "Plugin with config",
        "type": "general",
      },
      "ScreenPlugin": Object {
        "identifier": "screen-plugin",
        "module": [MockFunction],
        "name": "Screen plugin",
        "type": "general",
      },
      "ScreenType3": Object {
        "configuration": Object {
          "foo": "bar",
        },
        "module": [MockFunction],
        "name": "ScreenType3",
        "type": "screen_type_3",
      },
      "ScreenType4": Object {
        "module": [MockFunction],
        "name": "ScreenType4",
        "type": "screen_type_4",
      },
      "playerPlugin": Object {
        "module": [MockFunction],
        "name": "playerPlugin",
        "type": "player",
      },
    }
  }
  screenId="1234"
  screenType="screen_type_1"
/>
`;

exports[`<ScreenResolver /> wraps the player with the playerController component when the screenType is playable 1`] = `
<ScreenResolverComponent
  components={
    Object {
      "PlayerController": [MockFunction],
      "ScreenType1": [MockFunction],
      "ScreenType2": [MockFunction],
    }
  }
  dispatch={[Function]}
  plugins={
    Object {
      "PluginWithConfig": Object {
        "configuration": Object {
          "foo": "bar",
        },
        "identifier": "plugin-with-config",
        "module": [MockFunction],
        "name": "Plugin with config",
        "type": "general",
      },
      "ScreenPlugin": Object {
        "identifier": "screen-plugin",
        "module": [MockFunction],
        "name": "Screen plugin",
        "type": "general",
      },
      "ScreenType3": Object {
        "configuration": Object {
          "foo": "bar",
        },
        "module": [MockFunction],
        "name": "ScreenType3",
        "type": "screen_type_3",
      },
      "ScreenType4": Object {
        "module": [MockFunction],
        "name": "ScreenType4",
        "type": "screen_type_4",
      },
      "playerPlugin": Object {
        "module": [MockFunction],
        "name": "playerPlugin",
        "type": "player",
      },
    }
  }
  screenData={Object {}}
  screenId="A1234"
  screenType="playable"
/>
`;

exports[`<ScreenResolver /> wraps the player with the playerController component when the screenType is playable 2`] = `
<mockConstructor
  Player={[MockFunction]}
  item={Object {}}
/>
`;
