/* eslint-disable no-unused-vars */
import { QuickBrickCommunicationModule } from "../../../Polyfills/QuickBrickCommunicationModule";
import * as reactUtils from "@applicaster/zapp-react-native-utils/reactUtils";

import { loadLocale } from "../loadLocale";

jest.mock("Platform", () => {
  const Platform = require.requireActual("Platform");
  Platform.OS = "samsung_tv";
  return Platform;
});

describe("loadLocale", () => {
  beforeEach(() => {
    global.tizen = {
      systeminfo: {
        getPropertyValue: (popertyName, resolve, reject) => {
          resolve({ language: "en_GB", country: "en_US" });
        },
      },
    };
  });

  it("returns promise", () => {
    expect(loadLocale()).toBeInstanceOf(Promise);
  });
  it("resolves the promise if there is no tizen global", () => {
    expect(loadLocale()).resolves.toBe();
  });
  it("rejects with error if there is a problem fetching locale", () => {
    global.tizen = {};
    expect(loadLocale()).rejects.toThrow("error");
  });
  it("Assigns languageLocale and countryLocale to QuickBrickCommunicationModule", async () => {
    await loadLocale();
    expect(QuickBrickCommunicationModule).toHaveProperty("languageLocale");
    expect(QuickBrickCommunicationModule).toHaveProperty("countryLocale");
  });
  it("Assigns correct local and country to  communication module", async () => {
    await loadLocale();
    expect(QuickBrickCommunicationModule.languageLocale).toBe("en");
    expect(QuickBrickCommunicationModule.countryLocale).toBe("gb");
  });
});
