// @flow
import * as React from "react";
import { View } from "react-native";
import { NavWrapper } from "../NavWrapper";
import { getHomeId } from "../Layout/layoutHelpers";
import { FocusableGroup } from "@applicaster/zapp-react-native-ui-components/Components/FocusableGroup";

type Props = {
  activeRiver: any,
  navigator: { isNavBarVisible: boolean },
  children: React.ComponentType<any>,
  rivers: { [string]: any },
  routeProps: {},
  isPlayerPresented: boolean,
  screenFocusBlocked: boolean,
  location: {},
};

const containerStyles = { flex: 1 };

export function RootViewWrapperComponent(props: Props) {
  const {
    activeRiver,
    navigator,
    rivers,
    screenFocusBlocked,
    isPlayerPresented,
    children,
    location,
  } = props;
  const { isNavBarVisible } = navigator;

  const blockScreenFocus = isPlayerPresented === false && screenFocusBlocked;
  return (
    <View style={containerStyles}>
      {isNavBarVisible && (
        <NavWrapper
          isHidden={isPlayerPresented}
          homeId={getHomeId(rivers)}
          activeRiver={activeRiver}
          navigator={navigator}
          location={location}
        />
      )}
      <FocusableGroup
        id={"RootWrapperComponent-Navigation"}
        isFocusDisabled={blockScreenFocus}
        style={containerStyles}
      >
        {children}
      </FocusableGroup>
    </View>
  );
}
