const { prerequisitesChecker } = require("../prerequisitesChecker");
const R = require("ramda");

const args = {
  cliArgs: [],
  cliOptions: {},
};

const ramdaSpy = jest.spyOn(R, "isNil");
jest.mock("semver", () => ({ satisfies: () => true }));

describe("prerequisitesChecker", () => {
  describe("node version requirements are satisfied", () => {
    it("throws if ZAPP_TOKEN is undefined", () => {
      const { ZAPP_TOKEN } = process.env;
      process.env.ZAPP_TOKEN = null;

      ramdaSpy.mockImplementation(() => true);
      expect(() => prerequisitesChecker(args)).toThrowErrorMatchingSnapshot();
      process.env.ZAPP_TOKEN = ZAPP_TOKEN;
    });

    it("returns true otherwise", () => {
      ramdaSpy.mockImplementation(() => false);
      expect(prerequisitesChecker(args)).toBe(true);
    });
  });
});
